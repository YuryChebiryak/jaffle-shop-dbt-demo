version: 2

models:
  - name: rolling_30_day_orders
    description: Aggregated completed orders over 30 days, sourced from stg_orders and stg_payments tables
    config:
      contract:
        enforced: true

    columns:
      - name: order_date
        description: The date of the orders (truncated to date level)
        data_type: date
        tests:
          - not_null

      - name: total_amount
        description: Total payment amount for all completed orders on this date
        data_type: decimal(38,8)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                max_value: 1000000  # Reasonable upper bound for daily totals

      - name: order_count
        description: Number of completed orders on this date
        data_type: decimal(38,8)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                max_value: 10000  # Reasonable upper bound for daily order count

      - name: rolling_30_day_amount
        description: Sum of total_amount over the current date and previous 29 days
        data_type: decimal(38,8)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                max_value: 30000000  # 30x the daily max

      - name: rolling_30_day_orders
        description: Sum of order_count over the current date and previous 29 days
        data_type: decimal(38,8)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                max_value: 300000  # 30x the daily max

      - name: rolling_30_day_avg_daily
        description: Average daily total_amount over the current date and previous 29 days
        data_type: decimal(38,8)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                max_value: 1000000  # Same as daily max

  - name: at_risk_customers
    description: Customers who haven't ordered in 60+ days but have prior activity, at risk of churning
    config:
      contract:
        enforced: true

    columns:
      - name: customer_id
        description: Unique identifier for the customer
        data_type: integer
        tests:
          - unique
          - not_null

      - name: first_name
        description: Customer's first name
        data_type: varchar
        tests:
          - not_null

      - name: last_name
        description: Customer's last name
        data_type: varchar
        tests:
          - not_null

      - name: first_order_date
        description: Date of customer's first order
        data_type: date
        tests:
          - not_null

      - name: last_order_date
        description: Date of customer's most recent order
        data_type: date
        tests:
          - not_null

      - name: total_orders
        description: Total number of orders placed by customer
        data_type: bigint
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 1
                max_value: 1000  # Reasonable upper bound

      - name: completed_orders
        description: Number of completed orders by customer
        data_type: bigint
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                max_value: 1000

      - name: reference_date
        description: Reference date used for calculation (max order date in dataset)
        data_type: date
        tests:
          - not_null
        constraints:
          - type: not_null

      - name: days_since_last_order
        description: Number of days since customer's last order
        data_type: integer
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 60
                max_value: 1000  # Reasonable upper bound for days